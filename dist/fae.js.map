{"version":3,"file":"fae.js","sources":["../src/utils/logBanner.js","../src/core/Application.js","../node_modules/eventemitter3/index.js","../src/core/Entity.js","../src/fae.js"],"sourcesContent":["/* eslint no-console: off */\nimport { version } from '../../package.json'\n\n// Display a nice banner in the browser console\nexport default function logBanner () {\n  console.log(`%cfae â™¥ ${version}%c https://github.com/sambrosia/fae `, `\n    background: #aaf;\n    color: white;\n    line-height: 39px;\n    padding: 4px 10px;\n    border-radius: 30px;\n  `, 'color: #aaf;')\n}\n","import EventEmitter from 'eventemitter3'\nimport logBanner from '../utils/logBanner'\n\n// Provides events and manages systems, scenes, and entity groups\nexport default class Application {\n  constructor (start = main) {\n    // ## Properties\n    // *(read-only)*\n\n    // An EventEmitter for messaging throughout the game\n    this.event = new EventEmitter()\n\n    // A Set containing all currently running ECS systems\n    this.systems = new Set()\n\n    // An object whose keys are group names and whose values are Sets\n    // containing groups of related entities\n    this.groups = { all: new Set() }\n\n    start(this)\n    logBanner()\n  }\n\n  // ## Methods\n\n  // Return an array of entities that belong to all of the provided groups\n  entitiesWith (...groups) {\n    groups.sort((a, b) => this.groups[a].size - this.groups[b].size)\n    const entities = []\n    for (const entity of this.groups[groups[0]]) {\n      if (entity.hasGroups(...groups)) entities.push(entity)\n    }\n    return entities\n  }\n\n  // Register `system`'s event listeners and return `system`\n  startSystem (system) {\n    this.systems.add(system)\n    for (const listener in system.listeners) {\n      this.event.on(listener, system.listeners[listener], system)\n    }\n    return system\n  }\n\n  // Unregister `system`'s event listeners\n  stopSystem (system) {\n    this.systems.delete(system)\n    for (const listener in system.listeners) {\n      this.event.removeListener(listener, system.listeners[listener], system)\n    }\n  }\n\n  // Stop/destroy all non-persistent systems and entities\n  // Includes persistent entities if `clearAll` is `true`\n  clear (clearAll = false) {\n    for (const system of this.systems) {\n      if (!system.persistent || clearAll) this.stopSystem(system)\n    }\n    for (const entity of this.groups.all) {\n      if (!entity.persistent || clearAll) entity.destroy()\n    }\n  }\n}\n\n// #### Default game loop\n\n// Used if you do not provide a custom `start` function to the\n// `Application` constructor\n// *Note that this function will not work in Node due to use of `window`*\nfunction main (app) {\n  let dt = 0\n  let lastTime = window.performance.now()\n\n  function gameLoop () {\n    app.event.emit('preupdate')\n\n    const currentTime = window.performance.now()\n    dt = (currentTime - lastTime) / 1000\n    lastTime = currentTime\n\n    app.event.emit('update', dt)\n    app.event.emit('draw')\n\n    window.requestAnimationFrame(gameLoop)\n  }\n  gameLoop()\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Composes one logical 'object' in the game using components\nexport default class Entity {\n  constructor (app) {\n    // ## Properties\n    // *(read-only)*\n\n    // A reference to an `Application` instance\n    this.app = app\n\n    // The Set of group names that this entity is a member of\n    this.groups = new Set()\n\n    this.group('all')\n  }\n\n  // ## Methods\n\n  // Attach the provided component instances to the entity\n  attach (...components) {\n    for (const component of components) {\n      const name = Object.getPrototypeOf(component).constructor.name\n\n      this[name] = component\n      this.group(name)\n\n      component.entity = this\n    }\n    return this\n  }\n\n  // Attach the properties of the `components` object,\n  // where the keys are the component names\n  // and the values are the component instances\n  attachProperties (components) {\n    for (const name in components) {\n      this[name] = components[name]\n      this.group(name)\n      if (typeof components[name] === 'object') components[name].entity = this\n    }\n    return this\n  }\n\n  detach (...componentNames) {\n    for (const name of componentNames) {\n      this[name] = null\n      this.ungroup(name)\n    }\n    return this\n  }\n\n  // Add this entity to the provided groups,\n  // creating any that don't already exist\n  group (...groups) {\n    for (const group of groups) {\n      if (!this.app.groups[group]) this.app.groups[group] = new Set()\n      this.app.groups[group].add(this)\n      this.groups.add(group)\n    }\n    return this\n  }\n\n  ungroup (...groups) {\n    for (const group of groups) {\n      this.app.groups[group].delete(this)\n      this.groups.delete(group)\n    }\n    return this\n  }\n\n  hasGroups (...groups) {\n    for (const group of groups) {\n      if (!this.groups.has(group)) return false\n    }\n    return true\n  }\n\n  // Free all of fae's internal references to the entity,\n  // allowing it to be garbage collected\n  destroy () {\n    this.destroyed = true\n    for (const group of this.groups) {\n      this.ungroup(group)\n    }\n  }\n}\n","import Application from './core/Application'\nimport Entity from './core/Entity'\nimport logBanner from './utils/logBanner'\n\nexport default {\n  Application,\n  Entity,\n  utils: { logBanner }\n}\n"],"names":["logBanner","console","log","version","main","app","gameLoop","event","emit","const","currentTime","window","performance","now","dt","lastTime","requestAnimationFrame","let","Events","EE","fn","context","once","this","EventEmitter","_events","_eventsCount","has","Object","prototype","hasOwnProperty","prefix","create","__proto__","eventNames","events","name","names","call","push","slice","getOwnPropertySymbols","concat","listeners","exists","evt","available","i","l","length","ee","Array","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","listener","removeAllListeners","off","addListener","setMaxListeners","prefixed","module","Application","start","systems","Set","groups","all","entitiesWith","sort","a","b","size","entities","entity","hasGroups","startSystem","system","add","this$1","stopSystem","delete","clear","clearAll","persistent","destroy","Entity","group","attach","components","component","getPrototypeOf","constructor","attachProperties","detach","componentNames","ungroup","destroyed","utils"],"mappings":"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"}